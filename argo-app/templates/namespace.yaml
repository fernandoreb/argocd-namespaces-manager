# Creating namespace
{{ if .Values.namespaces }}

{{ range $namespace := .Values.namespaces }}

{{ $sufix := "default" }}

{{ if $.Values.nodeSelectorNS }}
{{ range $sufixTemp := $.Values.nodeSelectorNS }}

{{ if hasSuffix $sufixTemp $namespace }}

{{ $sufix = $sufixTemp }}

{{ end }}

{{ end }}
{{ end }}

{{ if eq "default" $sufix }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    helm.sh/resource-policy: keep
{{ include "argoteste.annotations" . | indent 4 }}    
  labels:
    argocd.argoproj.io/managed-by: devops
{{ include "argoteste.labels" . | indent 4 }}

{{ else }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ $namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    helm.sh/resource-policy: keep
    openshift.io/node-selector: 'region=agora, zone={{$sufix}}'
{{ include "argoteste.annotations" . | indent 4 }}    
  labels:
    argocd.argoproj.io/managed-by: devops
{{ include "argoteste.labels" . | indent 4 }}
{{ end }}

{{ end }}
{{ end }}

# Creating anyuid rolebiding
{{ if and .Values.namespaces .Values.anyuidRoleAllNS }}
{{ $anyuidRoleAllNS := .Values.anyuidRoleAllNS}}
{{ range $namespace := .Values.namespaces }}
{{ if $anyuidRoleAllNS }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: system:openshift:scc:anyuid
  namespace: {{ $namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "6"
{{ include "argo-teste.annotations" . | indent 4 }}    
  labels:
    argocd.argoproj.io/managed-by: devops
{{ include "argo-teste.labels" . | indent 4 }}

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ $namespace }}
{{ end }}
{{ end }}
{{ end }}
